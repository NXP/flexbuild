#!/bin/bash

# Copyright 2017-2021 NXP
#
# SPDX-License-Identifier: BSD-3-Clause


build_distro_rfs_yocto() {
    [ $username = root ] && fbprint_w "Please build yocto as non-root account" && exit
    [ -f $PKGDIR/rfs/yocto-poky/meta-poky/recipes-core/tiny-init/files/init ] || \
    git clone $repo_yocto_poky_url $PKGDIR/rfs/yocto-poky -b $repo_yocto_poky_tag

    yoctorfs=rootfs_${DISTRIB_VERSION}_yocto_${DISTROSCALE}_${DESTARCH}
    . $PKGDIR/rfs/yocto-poky/oe-init-build-env $FBOUTDIR/rfs/$yoctorfs
    $FBDIR/configs/yocto/reconfig.sh fixcfg
    cp -f $FBDIR/configs/yocto/local_${DESTARCH}_${DISTROSCALE}.conf $FBOUTDIR/rfs/$yoctorfs/conf/local.conf
    export LANG=en_US.UTF-8
    [ $DESTARCH = arm64 ] && export MACHINE=qemuarm64 || export MACHINE=qemuarm
    bitbake $yoctoimgtype
    [ $DESTARCH = arm64 -a $DISTROSCALE = devel ] && $FBDIR/configs/yocto/reconfig.sh fixlib $RFSDIR/usr/lib/libc.so
    [ -L $FBOUTDIR/rfs/$yoctorfs/target ] || ln -s $RFSDIR $FBOUTDIR/rfs/$yoctorfs/target

    # setup app components (restool, aiop_tool, tsntool, fmc, etc) in yocto userland
    echo Building and installing app components for $DISTROTYPE $DISTROSCALE
    bld -c apps -r yocto:$DISTROSCALE -a ${DESTARCH} -p $SOCFAMILY -f $CFGLISTYML
    if [ $DISTROSCALE = tiny ]; then
	[ -f $DESTDIR/usr/local/bin/restool ] && sudo cp -f $DESTDIR/usr/local/bin/{ls-*,restool} $RFSDIR/usr/bin
	[ -f $DESTDIR/usr/bin/aiop_tool ] && sudo cp -f $DESTDIR/usr/bin/aiop_tool $RFSDIR/usr/bin
	[ -f $DESTDIR/lib/libfm-arm.a ] && sudo cp -f $DESTDIR/lib/libfm-arm.a $RFSDIR/lib
	[ -f $DESTDIR/usr/local/bin/fmc ] && sudo cp -f $DESTDIR/usr/local/bin/fmc $RFSDIR/usr/bin && \
	sudo cp -Prf --preserve=mode,timestamps $DESTDIR/etc/fmc $RFSDIR/etc && sudo cp -f $DESTDIR/usr/local/lib/*/libfmc.a $RFSDIR/usr/lib
	[ -f $DESTDIR/usr/local/bin/tsntool ] && sudo cp -f $DESTDIR/usr/local/bin/tsntool $RFSDIR/usr/bin && \
	sudo cp -f $DESTDIR/usr/lib/libtsn.so $RFSDIR/usr/lib
	sudo mkdir -p $RFSDIR/usr/local/bin
	[ -f $DESTDIR/usr/local/bin/ccsr ] && sudo cp -f $DESTDIR/usr/local/bin/ccsr $RFSDIR/usr/local/bin/
	sudo rm -rf $RFSDIR/usr/include/* $RFSDIR/usr/lib/aarch64-poky-linux $RFSDIR/usr/share/libtool $RFSDIR/usr/share/aclocal
	sudo echo TinyLinux | sudo tee $RFSDIR/etc/hostname 1>/dev/null
	sudo cp -f $FBDIR/src/misc/mount-modules $RFSDIR/usr/local/bin
    elif [ $DISTROSCALE = devel ]; then
	sudo cp -Prf --preserve=mode,timestamps $DESTDIR/* $RFSDIR/
	sudo mkdir -p $RFSDIR/etc/systemd/system
	sudo cp -f $FBDIR/src/misc/boot.mount $RFSDIR/etc/systemd/system
	sudo echo DevelLinux | sudo tee $RFSDIR/etc/hostname 1>/dev/null
    fi
    distroinfo="$DISTRIB_NAME $DISTROSCALE ${DISTRIB_VERSION: -4} (based on Yocto)"
    echo $distroinfo | sudo tee $RFSDIR/etc/issue 1>/dev/null
    echo $distroinfo | sudo tee $RFSDIR/etc/buildinfo 1>/dev/null
    distrostamp="Build: `date +'%Y-%m-%d %H:%M:%S'`"
    echo "$distrostamp" | sudo tee -a $RFSDIR/etc/buildinfo 1>/dev/null
    sudo cp -f $FBDIR/tools/flex-installer $RFSDIR/usr/bin
    $FBDIR/configs/yocto/reconfig.sh fixsys $RFSDIR
    cd $RFSDIR && sudo chown -h -R 0:0 * && \
    sudo find . | sudo cpio --quiet -o -H newc | gzip > $FBOUTDIR/images/$yoctorfs.cpio.gz && fbprint_d $FBOUTDIR/images/$yoctorfs.cpio.gz
    cp -f $yoctotmpdir/deploy/images/$MACHINE/${yoctoimgtype}-${MACHINE}.manifest $FBOUTDIR/rfs/$yoctorfs/$yoctorfs.packages.manifest

    bld -i packrfs -r yocto:$DISTROSCALE -a $DESTARCH -p $SOCFAMILY -f $CFGLISTYML
    ls -goh $FBOUTDIR/images/$yoctorfs*
}
